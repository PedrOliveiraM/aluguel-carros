services:
  postgres:
    image: postgres:latest
    container_name: aluguel-carros
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
        # ports:
        # - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    restart: always
      # ports:
      # - "6379:6379"
  backend:
    build: .
    container_name: backend
    restart: always
    ports:
      - "4545:4545"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/mydb
      - REDIS_URL=redis://redis:6379/0
    command: >
      sh -c "
      npx prisma generate &&
      (npx prisma db push || echo 'Database schema already pushed') &&
      node -e '
      const { PrismaClient } = require(\"@prisma/client\");
      const prisma = new PrismaClient();
      prisma.user.count().then(count => {
        if (count === 0) {
          console.log(\"Seeding database...\");
          require(\"./prisma/seed\");
        } else {
          console.log(\"Database already seeded.\");
        }
      }).catch(console.error).finally(() => prisma.$disconnect());
      '
      "

volumes:
  postgres_data:
